//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AceFly.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FlyAceEntities : DbContext
    {
        public FlyAceEntities()
            : base("name=FlyAceEntities")
        {
            this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Flight> Flights { get; set; }
        public virtual DbSet<Plane> Planes { get; set; }
        public virtual DbSet<Route> Routes { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<user_details> user_details { get; set; }
        public virtual DbSet<MarketEmail> MarketEmails { get; set; }
        public virtual DbSet<Querry> Querries { get; set; }
    
        public virtual int prc_AddFlights(string planeName, Nullable<int> noSeats, string day, Nullable<System.TimeSpan> arrTime, Nullable<System.TimeSpan> deptTime, string from, string to, Nullable<double> priceB, Nullable<double> priceE, Nullable<int> noWeeks)
        {
            var planeNameParameter = planeName != null ?
                new ObjectParameter("planeName", planeName) :
                new ObjectParameter("planeName", typeof(string));
    
            var noSeatsParameter = noSeats.HasValue ?
                new ObjectParameter("NoSeats", noSeats) :
                new ObjectParameter("NoSeats", typeof(int));
    
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var arrTimeParameter = arrTime.HasValue ?
                new ObjectParameter("arrTime", arrTime) :
                new ObjectParameter("arrTime", typeof(System.TimeSpan));
    
            var deptTimeParameter = deptTime.HasValue ?
                new ObjectParameter("deptTime", deptTime) :
                new ObjectParameter("deptTime", typeof(System.TimeSpan));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var priceBParameter = priceB.HasValue ?
                new ObjectParameter("priceB", priceB) :
                new ObjectParameter("priceB", typeof(double));
    
            var priceEParameter = priceE.HasValue ?
                new ObjectParameter("priceE", priceE) :
                new ObjectParameter("priceE", typeof(double));
    
            var noWeeksParameter = noWeeks.HasValue ?
                new ObjectParameter("noWeeks", noWeeks) :
                new ObjectParameter("noWeeks", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_AddFlights", planeNameParameter, noSeatsParameter, dayParameter, arrTimeParameter, deptTimeParameter, fromParameter, toParameter, priceBParameter, priceEParameter, noWeeksParameter);
        }
    
        public virtual int prc_AddTravelDate(string day, Nullable<int> noWeeks, string rout_Id, Nullable<int> noSeats)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var noWeeksParameter = noWeeks.HasValue ?
                new ObjectParameter("noWeeks", noWeeks) :
                new ObjectParameter("noWeeks", typeof(int));
    
            var rout_IdParameter = rout_Id != null ?
                new ObjectParameter("Rout_Id", rout_Id) :
                new ObjectParameter("Rout_Id", typeof(string));
    
            var noSeatsParameter = noSeats.HasValue ?
                new ObjectParameter("noSeats", noSeats) :
                new ObjectParameter("noSeats", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_AddTravelDate", dayParameter, noWeeksParameter, rout_IdParameter, noSeatsParameter);
        }
    
        public virtual int prc_bookTicktes(string transId, string pname, string seatNo, string sch_Id, string p_Type, string email, string doc_type, string doc_no)
        {
            var transIdParameter = transId != null ?
                new ObjectParameter("transId", transId) :
                new ObjectParameter("transId", typeof(string));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var seatNoParameter = seatNo != null ?
                new ObjectParameter("seatNo", seatNo) :
                new ObjectParameter("seatNo", typeof(string));
    
            var sch_IdParameter = sch_Id != null ?
                new ObjectParameter("Sch_Id", sch_Id) :
                new ObjectParameter("Sch_Id", typeof(string));
    
            var p_TypeParameter = p_Type != null ?
                new ObjectParameter("P_Type", p_Type) :
                new ObjectParameter("P_Type", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var doc_typeParameter = doc_type != null ?
                new ObjectParameter("doc_type", doc_type) :
                new ObjectParameter("doc_type", typeof(string));
    
            var doc_noParameter = doc_no != null ?
                new ObjectParameter("doc_no", doc_no) :
                new ObjectParameter("doc_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_bookTicktes", transIdParameter, pnameParameter, seatNoParameter, sch_IdParameter, p_TypeParameter, emailParameter, doc_typeParameter, doc_noParameter);
        }
    
        public virtual int prc_cancelTicket(string ticketId)
        {
            var ticketIdParameter = ticketId != null ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_cancelTicket", ticketIdParameter);
        }
    
        public virtual int prc_DisableSchedule(string schedule_ID)
        {
            var schedule_IDParameter = schedule_ID != null ?
                new ObjectParameter("schedule_ID", schedule_ID) :
                new ObjectParameter("schedule_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_DisableSchedule", schedule_IDParameter);
        }
    
        public virtual ObjectResult<prc_displayTickets_Result> prc_displayTickets(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_displayTickets_Result>("prc_displayTickets", emailParameter);
        }
    
        public virtual int prc_FlightSeats(Nullable<int> no, string scheduleID)
        {
            var noParameter = no.HasValue ?
                new ObjectParameter("no", no) :
                new ObjectParameter("no", typeof(int));
    
            var scheduleIDParameter = scheduleID != null ?
                new ObjectParameter("scheduleID", scheduleID) :
                new ObjectParameter("scheduleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_FlightSeats", noParameter, scheduleIDParameter);
        }
    
        public virtual ObjectResult<string> prc_generateTranction(string email, Nullable<double> amount, string t_type, Nullable<long> cardno)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var t_typeParameter = t_type != null ?
                new ObjectParameter("t_type", t_type) :
                new ObjectParameter("t_type", typeof(string));
    
            var cardnoParameter = cardno.HasValue ?
                new ObjectParameter("cardno", cardno) :
                new ObjectParameter("cardno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prc_generateTranction", emailParameter, amountParameter, t_typeParameter, cardnoParameter);
        }
    
        public virtual ObjectResult<prc_getSeats_Result> prc_getSeats(string scheduleID)
        {
            var scheduleIDParameter = scheduleID != null ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_getSeats_Result>("prc_getSeats", scheduleIDParameter);
        }
    
        public virtual ObjectResult<PRC_SearchFlights_Result> PRC_SearchFlights(string from, string to, Nullable<System.DateTime> trvDate)
        {
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var trvDateParameter = trvDate.HasValue ?
                new ObjectParameter("trvDate", trvDate) :
                new ObjectParameter("trvDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_SearchFlights_Result>("PRC_SearchFlights", fromParameter, toParameter, trvDateParameter);
        }
    
        public virtual ObjectResult<prc_ViewSchedule_Result> prc_ViewSchedule()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_ViewSchedule_Result>("prc_ViewSchedule");
        }
    
        public virtual ObjectResult<string> prc_generateTransaction(string email, Nullable<double> amount, string t_type, Nullable<long> cardno)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var t_typeParameter = t_type != null ?
                new ObjectParameter("t_type", t_type) :
                new ObjectParameter("t_type", typeof(string));
    
            var cardnoParameter = cardno.HasValue ?
                new ObjectParameter("cardno", cardno) :
                new ObjectParameter("cardno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prc_generateTransaction", emailParameter, amountParameter, t_typeParameter, cardnoParameter);
        }
    
        public virtual ObjectResult<prc_SearchFlights1_Result> prc_SearchFlights1(string from, string to, Nullable<System.DateTime> trvDate)
        {
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var trvDateParameter = trvDate.HasValue ?
                new ObjectParameter("trvDate", trvDate) :
                new ObjectParameter("trvDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_SearchFlights1_Result>("prc_SearchFlights1", fromParameter, toParameter, trvDateParameter);
        }
    
        public virtual ObjectResult<prc_displayTicket_Result> prc_displayTicket(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_displayTicket_Result>("prc_displayTicket", emailParameter);
        }
    
        public virtual ObjectResult<prc_SearchFlights2_Result> prc_SearchFlights2(string from, string to, Nullable<System.DateTime> trvDate)
        {
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var trvDateParameter = trvDate.HasValue ?
                new ObjectParameter("trvDate", trvDate) :
                new ObjectParameter("trvDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_SearchFlights2_Result>("prc_SearchFlights2", fromParameter, toParameter, trvDateParameter);
        }
    
        public virtual ObjectResult<prc_getFlights_Result> prc_getFlights(string from, string to, Nullable<System.DateTime> trvDate)
        {
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var trvDateParameter = trvDate.HasValue ?
                new ObjectParameter("trvDate", trvDate) :
                new ObjectParameter("trvDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_getFlights_Result>("prc_getFlights", fromParameter, toParameter, trvDateParameter);
        }
    }
}
